// ****** SPEED ******
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ComponentModel;
using Speed;
using Speed.Data;


namespace TesteRaizen.Data
{

    [DbTable("dbo", "PessoaFisica", "", "")]
    [Serializable]
    [DataContract(Name = "PessoaFisica", Namespace = "")]
//    [System.Diagnostics.DebuggerStepThrough]
    public partial class PessoaFisica : Record, ICloneable, INotifyPropertyChanged
    {

        private Int32 z_IdPessoa;
        [DbColumn("IdPessoa")]
        [DataMember]
        public Int32 IdPessoa
        {
            get { return z_IdPessoa; }
            set
            {
                if (z_IdPessoa != value)
                {
                    z_IdPessoa = value;
                    this.RaisePropertyChanged("IdPessoa");
                }
            }
        }

        private String z_Cpf;
        [DbColumn("Cpf")]
        [DataMember]
        public String Cpf
        {
            get { return z_Cpf; }
            set
            {
                if (z_Cpf != value)
                {
                    z_Cpf = value;
                    this.RaisePropertyChanged("Cpf");
                }
            }
        }

        private String z_Rg;
        [DbColumn("Rg")]
        [DataMember]
        public String Rg
        {
            get { return z_Rg; }
            set
            {
                if (z_Rg != value)
                {
                    z_Rg = value;
                    this.RaisePropertyChanged("Rg");
                }
            }
        }

        private String z_RgOrgaoEmissor;
        [DbColumn("RgOrgaoEmissor")]
        [DataMember]
        public String RgOrgaoEmissor
        {
            get { return z_RgOrgaoEmissor; }
            set
            {
                if (z_RgOrgaoEmissor != value)
                {
                    z_RgOrgaoEmissor = value;
                    this.RaisePropertyChanged("RgOrgaoEmissor");
                }
            }
        }

        private String z_RgOrgaoEmissorUf;
        [DbColumn("RgOrgaoEmissorUf")]
        [DataMember]
        public String RgOrgaoEmissorUf
        {
            get { return z_RgOrgaoEmissorUf; }
            set
            {
                if (z_RgOrgaoEmissorUf != value)
                {
                    z_RgOrgaoEmissorUf = value;
                    this.RaisePropertyChanged("RgOrgaoEmissorUf");
                }
            }
        }

        private Int32 z_IdEstadoCivil;
        [DbColumn("IdEstadoCivil")]
        [DataMember]
        public Int32 IdEstadoCivil
        {
            get { return z_IdEstadoCivil; }
            set
            {
                if (z_IdEstadoCivil != value)
                {
                    z_IdEstadoCivil = value;
                    this.RaisePropertyChanged("IdEstadoCivil");
                }
            }
        }

        private Int32? z_IdPessoaConjugue;
        [DbColumn("IdPessoaConjugue")]
        [DataMember]
        public Int32? IdPessoaConjugue
        {
            get { return z_IdPessoaConjugue; }
            set
            {
                if (z_IdPessoaConjugue != value)
                {
                    z_IdPessoaConjugue = value;
                    this.RaisePropertyChanged("IdPessoaConjugue");
                }
            }
        }

        private String z_Sexo;
        [DbColumn("Sexo")]
        [DataMember]
        public String Sexo
        {
            get { return z_Sexo; }
            set
            {
                if (z_Sexo != value)
                {
                    z_Sexo = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }

        private Int32 z_Nacionalidade;
        [DbColumn("Nacionalidade")]
        [DataMember]
        public Int32 Nacionalidade
        {
            get { return z_Nacionalidade; }
            set
            {
                if (z_Nacionalidade != value)
                {
                    z_Nacionalidade = value;
                    this.RaisePropertyChanged("Nacionalidade");
                }
            }
        }

        private String z_Profissao;
        [DbColumn("Profissao")]
        [DataMember]
        public String Profissao
        {
            get { return z_Profissao; }
            set
            {
                if (z_Profissao != value)
                {
                    z_Profissao = value;
                    this.RaisePropertyChanged("Profissao");
                }
            }
        }

        
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #endregion

        #region IsEqual

        public bool IsEqual(PessoaFisica value)
        {
            if (value == null)
                return false;
            return
				this.IdPessoa == value.IdPessoa &&
				this.Cpf == value.Cpf &&
				this.Rg == value.Rg &&
				this.RgOrgaoEmissor == value.RgOrgaoEmissor &&
				this.RgOrgaoEmissorUf == value.RgOrgaoEmissorUf &&
				this.IdEstadoCivil == value.IdEstadoCivil &&
				this.IdPessoaConjugue == value.IdPessoaConjugue &&
				this.Sexo == value.Sexo &&
				this.Nacionalidade == value.Nacionalidade &&
				this.Profissao == value.Profissao;

        }

        #endregion IsEqual

        #region Clone

        public override object Clone()
        {
            return CloneT();
        }

        public PessoaFisica CloneT()
        {
            PessoaFisica value = new PessoaFisica();
            value.RecordStatus = this.RecordStatus;
            value.RecordTag = this.RecordTag;

			value.IdPessoa = this.IdPessoa;
			value.Cpf = this.Cpf;
			value.Rg = this.Rg;
			value.RgOrgaoEmissor = this.RgOrgaoEmissor;
			value.RgOrgaoEmissorUf = this.RgOrgaoEmissorUf;
			value.IdEstadoCivil = this.IdEstadoCivil;
			value.IdPessoaConjugue = this.IdPessoaConjugue;
			value.Sexo = this.Sexo;
			value.Nacionalidade = this.Nacionalidade;
			value.Profissao = this.Profissao;

            return value;
        }

        #endregion Clone

        #region Create

        public static PessoaFisica Create(String _Cpf, String _Rg, String _RgOrgaoEmissor, String _RgOrgaoEmissorUf, Int32 _IdEstadoCivil, Int32? _IdPessoaConjugue, String _Sexo, Int32 _Nacionalidade, String _Profissao)
        {
            PessoaFisica __value = new PessoaFisica();

			__value.Cpf = _Cpf;
			__value.Rg = _Rg;
			__value.RgOrgaoEmissor = _RgOrgaoEmissor;
			__value.RgOrgaoEmissorUf = _RgOrgaoEmissorUf;
			__value.IdEstadoCivil = _IdEstadoCivil;
			__value.IdPessoaConjugue = _IdPessoaConjugue;
			__value.Sexo = _Sexo;
			__value.Nacionalidade = _Nacionalidade;
			__value.Profissao = _Profissao;

            return __value;
        }

        #endregion Create

   }

}
