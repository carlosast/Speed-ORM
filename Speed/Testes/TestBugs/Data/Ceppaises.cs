// ****** SPEED ******
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ComponentModel;
using Speed;
using Speed.Data;


namespace TesteRaizen.Data
{

    [DbTable("dbo", "CepPaises", "", "")]
    [Serializable]
    [DataContract(Name = "CepPaises", Namespace = "")]
//    [System.Diagnostics.DebuggerStepThrough]
    public partial class CepPaises : Record, ICloneable, INotifyPropertyChanged
    {

        private Int32 z_IdPais;
        [DbColumn("IdPais")]
        [DataMember]
        public Int32 IdPais
        {
            get { return z_IdPais; }
            set
            {
                if (z_IdPais != value)
                {
                    z_IdPais = value;
                    this.RaisePropertyChanged("IdPais");
                }
            }
        }

        private String z_Nome;
        [DbColumn("Nome")]
        [DataMember]
        public String Nome
        {
            get { return z_Nome; }
            set
            {
                if (z_Nome != value)
                {
                    z_Nome = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }

        private String z_ISO2;
        [DbColumn("ISO2")]
        [DataMember]
        public String ISO2
        {
            get { return z_ISO2; }
            set
            {
                if (z_ISO2 != value)
                {
                    z_ISO2 = value;
                    this.RaisePropertyChanged("ISO2");
                }
            }
        }

        private String z_ISO3;
        [DbColumn("ISO3")]
        [DataMember]
        public String ISO3
        {
            get { return z_ISO3; }
            set
            {
                if (z_ISO3 != value)
                {
                    z_ISO3 = value;
                    this.RaisePropertyChanged("ISO3");
                }
            }
        }

        private String z_Nacionalidade;
        [DbColumn("Nacionalidade")]
        [DataMember]
        public String Nacionalidade
        {
            get { return z_Nacionalidade; }
            set
            {
                if (z_Nacionalidade != value)
                {
                    z_Nacionalidade = value;
                    this.RaisePropertyChanged("Nacionalidade");
                }
            }
        }

        
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #endregion

        #region IsEqual

        public bool IsEqual(CepPaises value)
        {
            if (value == null)
                return false;
            return
				this.IdPais == value.IdPais &&
				this.Nome == value.Nome &&
				this.ISO2 == value.ISO2 &&
				this.ISO3 == value.ISO3 &&
				this.Nacionalidade == value.Nacionalidade;

        }

        #endregion IsEqual

        #region Clone

        public override object Clone()
        {
            return CloneT();
        }

        public CepPaises CloneT()
        {
            CepPaises value = new CepPaises();
            value.RecordStatus = this.RecordStatus;
            value.RecordTag = this.RecordTag;

			value.IdPais = this.IdPais;
			value.Nome = this.Nome;
			value.ISO2 = this.ISO2;
			value.ISO3 = this.ISO3;
			value.Nacionalidade = this.Nacionalidade;

            return value;
        }

        #endregion Clone

        #region Create

        public static CepPaises Create(Int32 _IdPais, String _Nome, String _ISO2, String _ISO3, String _Nacionalidade)
        {
            CepPaises __value = new CepPaises();

			__value.IdPais = _IdPais;
			__value.Nome = _Nome;
			__value.ISO2 = _ISO2;
			__value.ISO3 = _ISO3;
			__value.Nacionalidade = _Nacionalidade;

            return __value;
        }

        #endregion Create

   }

}
