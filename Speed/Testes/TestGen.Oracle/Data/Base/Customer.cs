// ****** SPEED ******
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ComponentModel;
using Speed;
using Speed.Data;


namespace TestGen.Oracle.Data
{

    [DbTable("SPEED", "CUSTOMER", "CUSTOMER_ID", "SEQ_CUSTOMER")]
    [Serializable]
    [DataContract(Name = "Customer", Namespace = "")]
//    [System.Diagnostics.DebuggerStepThrough]
    public partial class Customer : Record, ICloneable, INotifyPropertyChanged
    {

        private Decimal z_CustomerId;
        [DbColumn("CUSTOMER_ID")]
        [DataMember]
        public Decimal CustomerId
        {
            get { return z_CustomerId; }
            set
            {
                if (z_CustomerId != value)
                {
                    z_CustomerId = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }

        private String z_CustomerName;
        [DbColumn("CUSTOMER_NAME")]
        [DataMember]
        public String CustomerName
        {
            get { return z_CustomerName; }
            set
            {
                if (z_CustomerName != value)
                {
                    z_CustomerName = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }

        
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #endregion

        #region IsEqual

        public bool IsEqual(Customer value)
        {
            if (value == null)
                return false;
            return
				this.CustomerId == value.CustomerId &&
				this.CustomerName == value.CustomerName;

        }

        #endregion IsEqual

        #region Clone

        public override object Clone()
        {
            return CloneT();
        }

        public Customer CloneT()
        {
            Customer value = new Customer();
            value.RecordStatus = this.RecordStatus;
            value.RecordTag = this.RecordTag;

			value.CustomerId = this.CustomerId;
			value.CustomerName = this.CustomerName;

            return value;
        }

        #endregion Clone

        #region Create

        public static Customer Create(Decimal _CustomerId, String _CustomerName)
        {
            Customer __value = new Customer();

			__value.CustomerId = _CustomerId;
			__value.CustomerName = _CustomerName;

            return __value;
        }

        #endregion Create

   }

}
