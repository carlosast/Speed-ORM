// ****** SPEED ******
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ComponentModel;
using Speed;
using Speed.Data;


namespace TestGen.SqlServer.Data
{

    [DbTable("dbo", "Sales", "", "")]
    [Serializable]
    [DataContract(Name = "Sales", Namespace = "")]
//    [System.Diagnostics.DebuggerStepThrough]
    public partial class Sales : Record, ICloneable, INotifyPropertyChanged
    {

        private Int32 z_TestPerfID;
        [DbColumn("TestPerfID")]
        [DataMember]
        public Int32 TestPerfID
        {
            get { return z_TestPerfID; }
            set
            {
                if (z_TestPerfID != value)
                {
                    z_TestPerfID = value;
                    this.RaisePropertyChanged("TestPerfID");
                }
            }
        }

        private String z_CarrierTrackingNumber;
        [DbColumn("CarrierTrackingNumber")]
        [DataMember]
        public String CarrierTrackingNumber
        {
            get { return z_CarrierTrackingNumber; }
            set
            {
                if (z_CarrierTrackingNumber != value)
                {
                    z_CarrierTrackingNumber = value;
                    this.RaisePropertyChanged("CarrierTrackingNumber");
                }
            }
        }

        private Int32 z_OrderQty;
        [DbColumn("OrderQty")]
        [DataMember]
        public Int32 OrderQty
        {
            get { return z_OrderQty; }
            set
            {
                if (z_OrderQty != value)
                {
                    z_OrderQty = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }

        private Int32 z_ProductID;
        [DbColumn("ProductID")]
        [DataMember]
        public Int32 ProductID
        {
            get { return z_ProductID; }
            set
            {
                if (z_ProductID != value)
                {
                    z_ProductID = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }

        private Int32 z_SpecialOfferID;
        [DbColumn("SpecialOfferID")]
        [DataMember]
        public Int32 SpecialOfferID
        {
            get { return z_SpecialOfferID; }
            set
            {
                if (z_SpecialOfferID != value)
                {
                    z_SpecialOfferID = value;
                    this.RaisePropertyChanged("SpecialOfferID");
                }
            }
        }

        private Decimal z_UnitPrice;
        [DbColumn("UnitPrice")]
        [DataMember]
        public Decimal UnitPrice
        {
            get { return z_UnitPrice; }
            set
            {
                if (z_UnitPrice != value)
                {
                    z_UnitPrice = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }

        private Decimal z_UnitPriceDiscount;
        [DbColumn("UnitPriceDiscount")]
        [DataMember]
        public Decimal UnitPriceDiscount
        {
            get { return z_UnitPriceDiscount; }
            set
            {
                if (z_UnitPriceDiscount != value)
                {
                    z_UnitPriceDiscount = value;
                    this.RaisePropertyChanged("UnitPriceDiscount");
                }
            }
        }

        private Decimal z_LineTotal;
        [DbColumn("LineTotal")]
        [DataMember]
        public Decimal LineTotal
        {
            get { return z_LineTotal; }
            set
            {
                if (z_LineTotal != value)
                {
                    z_LineTotal = value;
                    this.RaisePropertyChanged("LineTotal");
                }
            }
        }

        private String z_LongText;
        [DbColumn("LongText")]
        [DataMember]
        public String LongText
        {
            get { return z_LongText; }
            set
            {
                if (z_LongText != value)
                {
                    z_LongText = value;
                    this.RaisePropertyChanged("LongText");
                }
            }
        }

        private Guid z_rowguid;
        [DbColumn("rowguid")]
        [DataMember]
        public Guid rowguid
        {
            get { return z_rowguid; }
            set
            {
                if (z_rowguid != value)
                {
                    z_rowguid = value;
                    this.RaisePropertyChanged("rowguid");
                }
            }
        }

        private DateTime z_ModifiedDate;
        [DbColumn("ModifiedDate")]
        [DataMember]
        public DateTime ModifiedDate
        {
            get { return z_ModifiedDate; }
            set
            {
                if (z_ModifiedDate != value)
                {
                    z_ModifiedDate = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }

        
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #endregion

        #region IsEqual

        public bool IsEqual(Sales value)
        {
            if (value == null)
                return false;
            return
				this.TestPerfID == value.TestPerfID &&
				this.CarrierTrackingNumber == value.CarrierTrackingNumber &&
				this.OrderQty == value.OrderQty &&
				this.ProductID == value.ProductID &&
				this.SpecialOfferID == value.SpecialOfferID &&
				this.UnitPrice == value.UnitPrice &&
				this.UnitPriceDiscount == value.UnitPriceDiscount &&
				this.LineTotal == value.LineTotal &&
				this.LongText == value.LongText &&
				this.rowguid == value.rowguid &&
				this.ModifiedDate == value.ModifiedDate;

        }

        #endregion IsEqual

        #region Clone

        public override object Clone()
        {
            return CloneT();
        }

        public Sales CloneT()
        {
            Sales value = new Sales();
            value.RecordStatus = this.RecordStatus;
            value.RecordTag = this.RecordTag;

			value.TestPerfID = this.TestPerfID;
			value.CarrierTrackingNumber = this.CarrierTrackingNumber;
			value.OrderQty = this.OrderQty;
			value.ProductID = this.ProductID;
			value.SpecialOfferID = this.SpecialOfferID;
			value.UnitPrice = this.UnitPrice;
			value.UnitPriceDiscount = this.UnitPriceDiscount;
			value.LineTotal = this.LineTotal;
			value.LongText = this.LongText;
			value.rowguid = this.rowguid;
			value.ModifiedDate = this.ModifiedDate;

            return value;
        }

        #endregion Clone

        #region Create

        public static Sales Create(String _CarrierTrackingNumber, Int32 _OrderQty, Int32 _ProductID, Int32 _SpecialOfferID, Decimal _UnitPrice, Decimal _UnitPriceDiscount, Decimal _LineTotal, String _LongText, Guid _rowguid, DateTime _ModifiedDate)
        {
            Sales __value = new Sales();

			__value.CarrierTrackingNumber = _CarrierTrackingNumber;
			__value.OrderQty = _OrderQty;
			__value.ProductID = _ProductID;
			__value.SpecialOfferID = _SpecialOfferID;
			__value.UnitPrice = _UnitPrice;
			__value.UnitPriceDiscount = _UnitPriceDiscount;
			__value.LineTotal = _LineTotal;
			__value.LongText = _LongText;
			__value.rowguid = _rowguid;
			__value.ModifiedDate = _ModifiedDate;

            return __value;
        }

        #endregion Create

   }

}
