// ****** SPEED ******
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ComponentModel;
using Speed;
using Speed.Data;


namespace TestGen.Firebird.Data
{

    [DbTable("", "SALES", "TESTPERFID", "GEN_SALES_ID")]
    [Serializable]
    [DataContract(Name = "Sales", Namespace = "")]
//    [System.Diagnostics.DebuggerStepThrough]
    public partial class Sales : Record, ICloneable, INotifyPropertyChanged
    {

        private Int32 z_Testperfid;
        [DbColumn("TESTPERFID")]
        [DataMember]
        public Int32 Testperfid
        {
            get { return z_Testperfid; }
            set
            {
                if (z_Testperfid != value)
                {
                    z_Testperfid = value;
                    this.RaisePropertyChanged("Testperfid");
                }
            }
        }

        private String z_Carriertrackingnumber;
        [DbColumn("CARRIERTRACKINGNUMBER")]
        [DataMember]
        public String Carriertrackingnumber
        {
            get { return z_Carriertrackingnumber; }
            set
            {
                if (z_Carriertrackingnumber != value)
                {
                    z_Carriertrackingnumber = value;
                    this.RaisePropertyChanged("Carriertrackingnumber");
                }
            }
        }

        private Int32 z_Orderqty;
        [DbColumn("ORDERQTY")]
        [DataMember]
        public Int32 Orderqty
        {
            get { return z_Orderqty; }
            set
            {
                if (z_Orderqty != value)
                {
                    z_Orderqty = value;
                    this.RaisePropertyChanged("Orderqty");
                }
            }
        }

        private Int32 z_Productid;
        [DbColumn("PRODUCTID")]
        [DataMember]
        public Int32 Productid
        {
            get { return z_Productid; }
            set
            {
                if (z_Productid != value)
                {
                    z_Productid = value;
                    this.RaisePropertyChanged("Productid");
                }
            }
        }

        private Int32 z_Specialofferid;
        [DbColumn("SPECIALOFFERID")]
        [DataMember]
        public Int32 Specialofferid
        {
            get { return z_Specialofferid; }
            set
            {
                if (z_Specialofferid != value)
                {
                    z_Specialofferid = value;
                    this.RaisePropertyChanged("Specialofferid");
                }
            }
        }

        private Decimal z_Unitprice;
        [DbColumn("UNITPRICE")]
        [DataMember]
        public Decimal Unitprice
        {
            get { return z_Unitprice; }
            set
            {
                if (z_Unitprice != value)
                {
                    z_Unitprice = value;
                    this.RaisePropertyChanged("Unitprice");
                }
            }
        }

        private Decimal z_Unitpricediscount;
        [DbColumn("UNITPRICEDISCOUNT")]
        [DataMember]
        public Decimal Unitpricediscount
        {
            get { return z_Unitpricediscount; }
            set
            {
                if (z_Unitpricediscount != value)
                {
                    z_Unitpricediscount = value;
                    this.RaisePropertyChanged("Unitpricediscount");
                }
            }
        }

        private Decimal? z_Linetotal;
        [DbColumn("LINETOTAL")]
        [DataMember]
        public Decimal? Linetotal
        {
            get { return z_Linetotal; }
            set
            {
                if (z_Linetotal != value)
                {
                    z_Linetotal = value;
                    this.RaisePropertyChanged("Linetotal");
                }
            }
        }

        private String z_Longtext;
        [DbColumn("LONGTEXT")]
        [DataMember]
        public String Longtext
        {
            get { return z_Longtext; }
            set
            {
                if (z_Longtext != value)
                {
                    z_Longtext = value;
                    this.RaisePropertyChanged("Longtext");
                }
            }
        }

        private DateTime z_Rowguid;
        [DbColumn("ROWGUID")]
        [DataMember]
        public DateTime Rowguid
        {
            get { return z_Rowguid; }
            set
            {
                if (z_Rowguid != value)
                {
                    z_Rowguid = value;
                    this.RaisePropertyChanged("Rowguid");
                }
            }
        }

        private DateTime z_Modifieddate;
        [DbColumn("MODIFIEDDATE")]
        [DataMember]
        public DateTime Modifieddate
        {
            get { return z_Modifieddate; }
            set
            {
                if (z_Modifieddate != value)
                {
                    z_Modifieddate = value;
                    this.RaisePropertyChanged("Modifieddate");
                }
            }
        }

        
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #endregion

        #region IsEqual

        public bool IsEqual(Sales value)
        {
            if (value == null)
                return false;
            return
				this.Testperfid == value.Testperfid &&
				this.Carriertrackingnumber == value.Carriertrackingnumber &&
				this.Orderqty == value.Orderqty &&
				this.Productid == value.Productid &&
				this.Specialofferid == value.Specialofferid &&
				this.Unitprice == value.Unitprice &&
				this.Unitpricediscount == value.Unitpricediscount &&
				this.Linetotal == value.Linetotal &&
				this.Longtext == value.Longtext &&
				this.Rowguid == value.Rowguid &&
				this.Modifieddate == value.Modifieddate;

        }

        #endregion IsEqual

        #region Clone

        public override object Clone()
        {
            return CloneT();
        }

        public Sales CloneT()
        {
            Sales value = new Sales();
            value.RecordStatus = this.RecordStatus;
            value.RecordTag = this.RecordTag;

			value.Testperfid = this.Testperfid;
			value.Carriertrackingnumber = this.Carriertrackingnumber;
			value.Orderqty = this.Orderqty;
			value.Productid = this.Productid;
			value.Specialofferid = this.Specialofferid;
			value.Unitprice = this.Unitprice;
			value.Unitpricediscount = this.Unitpricediscount;
			value.Linetotal = this.Linetotal;
			value.Longtext = this.Longtext;
			value.Rowguid = this.Rowguid;
			value.Modifieddate = this.Modifieddate;

            return value;
        }

        #endregion Clone

        #region Create

        public static Sales Create(Int32 _Testperfid, String _Carriertrackingnumber, Int32 _Orderqty, Int32 _Productid, Int32 _Specialofferid, Decimal _Unitprice, Decimal _Unitpricediscount, Decimal? _Linetotal, String _Longtext, DateTime _Rowguid, DateTime _Modifieddate)
        {
            Sales __value = new Sales();

			__value.Testperfid = _Testperfid;
			__value.Carriertrackingnumber = _Carriertrackingnumber;
			__value.Orderqty = _Orderqty;
			__value.Productid = _Productid;
			__value.Specialofferid = _Specialofferid;
			__value.Unitprice = _Unitprice;
			__value.Unitpricediscount = _Unitpricediscount;
			__value.Linetotal = _Linetotal;
			__value.Longtext = _Longtext;
			__value.Rowguid = _Rowguid;
			__value.Modifieddate = _Modifieddate;

            return __value;
        }

        #endregion Create

   }

}
